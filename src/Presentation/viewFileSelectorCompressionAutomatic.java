/** @file viewFileSelectorCompressionAutomatic.java
 * @brief Aquesta classe és la view del selector d'arxius de la compressió automatica.
 *
 * Els imports que utilitza són:
 *     - import java.awt.Color
 *     - import java.awt.Dimension
 *     - import java.awt.Frame
 *     - import java.io.File
 *     - import java.io.IOException
 *     - import java.util.logging.Level
 *     - import java.util.logging.Logger
 *     - import javax.swing.*
 *
 * @author Adrià Ventura i Herce
 */
package Presentation;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/*
 * Classe viewFileSelectorCompressionAutomatic
 */

/** @class viewFileSelectorCompressionAutomatic
 *  @brief Aquest és la view del selector d'arxius de la compressió automatica.
 *
 *  @author Adria Ventura i Herce
 */
public class viewFileSelectorCompressionAutomatic extends javax.swing.JFrame {
    /** @brief Instància del controlador de persistentació, inicialitzada al crear el controlador de presentació.*/
    private final CtrlPresentation ctrlPresentation;
    /** @brief Posició X del ratolí.*/
    private int xMouse;
    /** @brief Posició Y del ratolí.*/
    private int yMouse;
    
    /** @brief Creadora per defecte de viewFileSelectorCompressionAutomatic.
     * 
     * @param cP Es el controlador de presentació.
     * 
     * \pre <em>Cert.</em>
     * \post Ha creat una instància de viewFileSelectorCompressionAutomatic.
     */
    public viewFileSelectorCompressionAutomatic(CtrlPresentation cP) {
        this.setUndecorated(true);
        
        ctrlPresentation = cP;
        
        initComponents();
        
        this.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        
        this.setSize(new Dimension(500, 310));
        this.setResizable(false);
        
        slectorFiles.setBorder(new RoundedBorder(50));
        btnAfegirArxiu.setBorder(new RoundedBorder(40, 4, 4));
        btnAfegirArxiu.setContentAreaFilled(false);
        btnBuscaOut.setBorder(new RoundedBorder(40, 4, 4));
        btnBuscaOut.setContentAreaFilled(false);
        btnSelecciona.setBorder(new RoundedBorder(40, 4, 4));
        btnSelecciona.setContentAreaFilled(false);
        btnPrevisualitza.setBorder(new RoundedBorder(40, 4, 4));
        btnPrevisualitza.setContentAreaFilled(false);
    }
    
    /** @brief Fa "visibles" els objectes del Form corresponent.
     * 
     * \pre <em>Cert.</em>
     * \post Ha fet "visible" els objectes del Form corresponent
     */
    public void makeVisible() {
            
        //Activa panels
        panelEstadistiques.setEnabled(true);
        slectorFiles.setEnabled(true);

        //Activa botons
        btnAfegirArxiu.setEnabled(true);
        btnBuscaOut.setEnabled(true);
        btnSelecciona.setEnabled(true);
        btnPrevisualitza.setEnabled(true);

        //Activa labels
        labelIn.setEnabled(true);
        labelOut.setEnabled(true);
        labelTempsCom.setEnabled(true);
        labelTitol.setEnabled(true);
        labelRatioCom.setEnabled(true);
        labelBack.setEnabled(true);
        labelAccions.setEnabled(true);

        //Activa textField
        in_path.setEnabled(true);
        out_path.setEnabled(true);
    }
    
    /** @brief Fa "invisibles" els objectes del Form corresponent.
     * 
     * \pre <em>Cert.</em>
     * \post Ha fet "invisibles" els objectes del Form corresponent
     */
    public void makeInvisible() {
        //Desactiva botons
        btnAfegirArxiu.setEnabled(false);
        btnBuscaOut.setEnabled(false);
        btnSelecciona.setEnabled(false);
        btnPrevisualitza.setEnabled(false);

        //Desactiva labels
        labelIn.setEnabled(false);
        labelOut.setEnabled(false);
        labelTempsCom.setEnabled(false);
        labelTitol.setEnabled(false);
        labelRatioCom.setEnabled(false);
        labelBack.setEnabled(false);
        labelAccions.setEnabled(false);

        //Desactiva textField
        in_path.setEnabled(false);
        out_path.setEnabled(false);

        //Desactiva panels
        panelEstadistiques.setEnabled(false);
        slectorFiles.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        slectorFiles = new javax.swing.JPanel();
        in_path = new javax.swing.JTextField();
        out_path = new javax.swing.JTextField();
        btnBuscaOut = new javax.swing.JButton();
        btnAfegirArxiu = new javax.swing.JButton();
        labelOut = new javax.swing.JLabel();
        labelIn = new javax.swing.JLabel();
        labelTitol = new javax.swing.JLabel();
        panelEstadistiques = new javax.swing.JPanel();
        labelTempsCom = new javax.swing.JLabel();
        labelRatioCom = new javax.swing.JLabel();
        labelBack = new javax.swing.JLabel();
        labelMinimize = new javax.swing.JLabel();
        labelExit = new javax.swing.JLabel();
        labelCrown = new javax.swing.JLabel();
        btnSelecciona = new javax.swing.JButton();
        labelAccions = new javax.swing.JLabel();
        btnPrevisualitza = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 300));

        slectorFiles.setBackground(new java.awt.Color(255, 255, 255));
        slectorFiles.setOpaque(false);
        slectorFiles.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                slectorFilesMouseDragged(evt);
            }
        });
        slectorFiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                slectorFilesMousePressed(evt);
            }
        });

        in_path.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        in_path.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        out_path.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        out_path.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        btnBuscaOut.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscaOut.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        btnBuscaOut.setText("Buscar");
        btnBuscaOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaOutActionPerformed(evt);
            }
        });

        btnAfegirArxiu.setBackground(new java.awt.Color(255, 255, 255));
        btnAfegirArxiu.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        btnAfegirArxiu.setText("Afegir arxiu");
        btnAfegirArxiu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirArxiuActionPerformed(evt);
            }
        });

        labelOut.setBackground(new java.awt.Color(255, 255, 255));
        labelOut.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        labelOut.setText("out_path");

        labelIn.setBackground(new java.awt.Color(255, 255, 255));
        labelIn.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        labelIn.setText("in_path");

        labelTitol.setBackground(new java.awt.Color(255, 255, 255));
        labelTitol.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        labelTitol.setText("Selecció d'arxius:");

        panelEstadistiques.setBackground(new java.awt.Color(255, 255, 255));
        panelEstadistiques.setOpaque(false);

        labelTempsCom.setBackground(new java.awt.Color(255, 255, 255));
        labelTempsCom.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        labelTempsCom.setText("Temps de compressió: ");
        labelTempsCom.setToolTipText("");
        labelTempsCom.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelRatioCom.setBackground(new java.awt.Color(255, 255, 255));
        labelRatioCom.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        labelRatioCom.setText("Rati de compressió: ");

        labelBack.setBackground(new java.awt.Color(255, 255, 255));
        labelBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/EndarrereMitjana.png"))); // NOI18N
        labelBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBackMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelEstadistiquesLayout = new javax.swing.GroupLayout(panelEstadistiques);
        panelEstadistiques.setLayout(panelEstadistiquesLayout);
        panelEstadistiquesLayout.setHorizontalGroup(
            panelEstadistiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEstadistiquesLayout.createSequentialGroup()
                .addGroup(panelEstadistiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTempsCom, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addComponent(labelRatioCom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelEstadistiquesLayout.createSequentialGroup()
                        .addComponent(labelBack)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelEstadistiquesLayout.setVerticalGroup(
            panelEstadistiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEstadistiquesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelTempsCom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelRatioCom)
                .addGap(35, 35, 35)
                .addComponent(labelBack))
        );

        labelMinimize.setBackground(new java.awt.Color(255, 255, 255));
        labelMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/MinimitzarMitjana.png"))); // NOI18N
        labelMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelMinimizeMouseClicked(evt);
            }
        });

        labelExit.setBackground(new java.awt.Color(255, 255, 255));
        labelExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/SortirMitjana.png"))); // NOI18N
        labelExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelExitMouseClicked(evt);
            }
        });

        labelCrown.setBackground(new java.awt.Color(255, 255, 255));
        labelCrown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/the_crownMitjana.png"))); // NOI18N

        btnSelecciona.setBackground(new java.awt.Color(255, 255, 255));
        btnSelecciona.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        btnSelecciona.setText("Selecciona");
        btnSelecciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionaActionPerformed(evt);
            }
        });

        labelAccions.setBackground(new java.awt.Color(255, 255, 255));
        labelAccions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/AccionsMitjana.png"))); // NOI18N
        labelAccions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelAccionsMouseClicked(evt);
            }
        });

        btnPrevisualitza.setBackground(new java.awt.Color(255, 255, 255));
        btnPrevisualitza.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        btnPrevisualitza.setText("Previsualitza");
        btnPrevisualitza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevisualitzaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout slectorFilesLayout = new javax.swing.GroupLayout(slectorFiles);
        slectorFiles.setLayout(slectorFilesLayout);
        slectorFilesLayout.setHorizontalGroup(
            slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(slectorFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(slectorFilesLayout.createSequentialGroup()
                        .addComponent(labelCrown)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelAccions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelMinimize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelExit))
                    .addGroup(slectorFilesLayout.createSequentialGroup()
                        .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelOut)
                            .addComponent(labelIn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(out_path, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                            .addComponent(in_path))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscaOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAfegirArxiu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(slectorFilesLayout.createSequentialGroup()
                        .addComponent(labelTitol)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(slectorFilesLayout.createSequentialGroup()
                        .addComponent(panelEstadistiques, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPrevisualitza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSelecciona, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        slectorFilesLayout.setVerticalGroup(
            slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, slectorFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelExit)
                            .addComponent(labelMinimize))
                        .addComponent(labelCrown))
                    .addComponent(labelAccions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTitol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelIn)
                    .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(in_path, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAfegirArxiu, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelOut)
                    .addComponent(out_path, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscaOut, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(slectorFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, slectorFilesLayout.createSequentialGroup()
                        .addComponent(btnPrevisualitza, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelecciona, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelEstadistiques, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slectorFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slectorFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /** @brief Selecció del path desti on volem que estigui la sortida.
     * 
     * @param evt
     * 
     * \pre <em>Cert.</em>
     * \post S'ha obert un fileChooser i s'ha seleccionat el path destí.
     */
    private void btnBuscaOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaOutActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        int result = fileChooser.showOpenDialog(this);
        if(result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            out_path.setText(file.getPath());
        }
    }//GEN-LAST:event_btnBuscaOutActionPerformed

    /** @brief Selecció del path desti del arxiu origen a tractar.
     * 
     * @param evt
     * 
     * \pre <em>Cert.</em>
     * \post S'ha obert un fileChooser i s'ha seleccionat el path del arxiu origen.
     */
    private void btnAfegirArxiuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirArxiuActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        resetVariables();
        int result = fileChooser.showOpenDialog(this);
        if(result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            in_path.setText(file.getPath());
        }
        if (!in_path.getText().equals("")){
            if(!ctrlPresentation.getType(in_path.getText()).equals("DIR")) {
            out_path.setText(in_path.getText().substring(0,in_path.getText().lastIndexOf('/')) + "/comp_" +
                in_path.getText().substring(in_path.getText().lastIndexOf('/') + 1,in_path.getText().lastIndexOf('.')));
            }
            else {
                out_path.setText(in_path.getText().substring(0,in_path.getText().lastIndexOf('/')) + "/");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No s'ha seleccionat cap arxiu per descomprimir", "Error", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnAfegirArxiuActionPerformed

    /** @brief Compressió del arxiu a tractar.
     * 
     * @param evt
     * 
     * \pre <em>Cert.</em>
     * \post S'ha comprès l'arxiu a tractar i s'ha deixat al path destí seleccionat.
     */
    private void btnSeleccionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionaActionPerformed
        String in = in_path.getText();
        String out = out_path.getText();

        if(in.equals("") || out.equals("")) {
            JOptionPane.showMessageDialog(null, "Les direccions no son coherents", "Error", JOptionPane.WARNING_MESSAGE);
        }
        else if (ctrlPresentation.getType(in).equals("DIR")) {
            try {
                ctrlPresentation.compressFolder(in, out);
                labelTempsCom.setText(labelTempsCom.getText() + ctrlPresentation.getTotalTime());
                labelRatioCom.setText(labelRatioCom.getText() + "-");
                JOptionPane.showMessageDialog(null, "Compressió finalitzada");
            } catch (IOException ex) {
                Logger.getLogger(viewFileSelectorCompressionAutomatic.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else {
            try {
                ctrlPresentation.compressFile(in, out);
                labelTempsCom.setText(labelTempsCom.getText() + ctrlPresentation.getTotalTime());
                labelRatioCom.setText(labelRatioCom.getText() + ctrlPresentation.getCompressRatio());
                JOptionPane.showMessageDialog(null, "Compressió finalitzada");
            } catch (IOException ex) {
                Logger.getLogger(viewFileSelectorCompressionAutomatic.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSeleccionaActionPerformed

    /** @brief Canvi de form del selector d'arxius compressio automàtica a form de opcions de compressió.
     * 
     * @param evt
     * 
     * \pre <em>Cert.</em>
     * \post Ha canviat del form del selector d'arxius compressio automàtica a form de opcions de compressió.
     */
    private void labelBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBackMouseClicked
        resetVariables();
        ctrlPresentation.syncViewFSCA_to_viewCO();
    }//GEN-LAST:event_labelBackMouseClicked

    /** @brief Minimitza el form.
     * 
     * @param evt
     * 
     * \pre <em>Cert.</em>
     * \post El form s'ha minimitzat.
     */
    private void labelMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelMinimizeMouseClicked
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_labelMinimizeMouseClicked

    /** @brief Tanca el form.
     * 
     * @param evt
     * 
     * \pre <em>Cert.</em>
     * \post El form es tanca.
     */
    private void labelExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelExitMouseClicked
        ctrlPresentation.exit();
    }//GEN-LAST:event_labelExitMouseClicked

    /** @brief Canvi de posició del form.
     * 
     * @param evt S'utilitza per saber la posició relativa del ratolí.
     * 
     * \pre <em>Cert.</em>
     * \post Canvia la posició relativa del form a on ha arrossegat el ratolí.
     */
    private void slectorFilesMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slectorFilesMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_slectorFilesMouseDragged

    /** @brief Iniciar posició relativa del form a les variables.
     * 
     * @param evt S'utilitza per saber la posició relativa del ratolí.
     * 
     * \pre <em>Cert.</em>
     * \post Ha iniciat la posició relativa del form a les dos variables 2D.
     */
    private void slectorFilesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slectorFilesMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_slectorFilesMousePressed

    /** @brief Canvi de form de selecctor d'arxius compressio automàtica a form de accions.
     * 
     * @param evt
     * 
     * \pre <em>Cert.</em>
     * \post Ha canviat del form de selecctor d'arxius compressio automàtica a form de accions.
     */
    private void labelAccionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelAccionsMouseClicked
        resetVariables();
        ctrlPresentation.syncViewFSCA_to_viewA();
    }//GEN-LAST:event_labelAccionsMouseClicked

    /** @brief Previsualització del arxiu seleccionat al path d'entrada.
     * 
     * @param evt
     * 
     * \pre <em>Cert.</em>
     * \post S'obre un form amb l'arxiu seleccionat per previsualitzar-ho.
     */
    private void btnPrevisualitzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevisualitzaActionPerformed
        String in = in_path.getText();
        String out = out_path.getText();
        
        if (in.equals("")) {
            JOptionPane.showMessageDialog(null, "No s'ha seleccionat cap arxiu per previsualitzar", "Error", JOptionPane.WARNING_MESSAGE);
        }
        else if (ctrlPresentation.getType(in).equals("DIR")) {
            JOptionPane.showMessageDialog(null, "No es poden previsualitzar carpetes", "Error", JOptionPane.WARNING_MESSAGE);
        }
        else {
            try {
                ctrlPresentation.compressFile(in, out + "Pre");
                String deleteCompression = ctrlPresentation.getPath();
                ctrlPresentation.decompressFile(ctrlPresentation.getPath(), out + "View");
                String deleteDecompression = ctrlPresentation.getPath();
                
                if (ctrlPresentation.getType(in).equals("TXT")) {
                    viewPreviewText display = new viewPreviewText(ctrlPresentation);
                    display.setVisible(true);
                }
                else {
                    viewPreviewImage display = new viewPreviewImage(ctrlPresentation);
                    display.setVisible(true);
                }
                
                ctrlPresentation.deleteFile(deleteCompression);
                ctrlPresentation.deleteFile(deleteDecompression);
                
            } catch (IOException ex) {
                Logger.getLogger(viewFileSelectorCompressionAutomatic.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }
    }//GEN-LAST:event_btnPrevisualitzaActionPerformed

    /** @brief Resetejar els objectes modificats durant el procès de selecció.
     * 
     * @param evt
     * 
     * \pre <em>Cert.</em>
     * \post S'han resetejat els objectes swing del form.
     */
    private void resetVariables(){
        in_path.setText("");
        out_path.setText("");
        labelTempsCom.setText("Temps de compressió: ");
        labelRatioCom.setText("Rati de compressió: ");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAfegirArxiu;
    private javax.swing.JButton btnBuscaOut;
    private javax.swing.JButton btnPrevisualitza;
    private javax.swing.JButton btnSelecciona;
    private javax.swing.JTextField in_path;
    private javax.swing.JLabel labelAccions;
    private javax.swing.JLabel labelBack;
    private javax.swing.JLabel labelCrown;
    private javax.swing.JLabel labelExit;
    private javax.swing.JLabel labelIn;
    private javax.swing.JLabel labelMinimize;
    private javax.swing.JLabel labelOut;
    private javax.swing.JLabel labelRatioCom;
    private javax.swing.JLabel labelTempsCom;
    private javax.swing.JLabel labelTitol;
    private javax.swing.JTextField out_path;
    private javax.swing.JPanel panelEstadistiques;
    private javax.swing.JPanel slectorFiles;
    // End of variables declaration//GEN-END:variables
}

